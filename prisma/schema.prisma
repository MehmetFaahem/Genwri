//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("SERVER_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  INVITED
  VERIFIED
}

model Template {
  id          String   @id() @default(uuid())
  name        String
  type        String
  description String?
  settings    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt()
}

model Image {
  id        String   @id() @default(uuid())
  prompt    String
  style     String?
  theme     String?
  imageUrl  String
  status    String
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

model Article {
  id        String   @id() @default(uuid())
  title     String
  topic     String?
  keywords  String?
  content   String
  length    Float?
  tone      String?
  status    String
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

model Download {
  id           String   @id() @default(uuid())
  resourceId   String
  resourceType String
  format       String
  downloadUrl  String
  userId       String
  user         User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt()
}

model User {
  id              String     @id() @default(uuid())
  name            String?
  email           String?    @unique()
  pictureUrl      String?    @default("https://i.imgur.com/ZdJSK3Y.jpeg")
  tokenInvitation String?
  emailVerified   Boolean?
  status          UserStatus @default(VERIFIED)
  globalRole      String     @default("USER")
  password        String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now()) @updatedAt()
  accounts        Account[]
  sessions        Session[]
  images          Image[]    @relation("user")
  articles        Article[]  @relation("user")
  downloads       Download[] @relation("user")
}

model Account {
  id                       String  @id() @default(uuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id() @default(uuid())
  sessionToken String   @unique()
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
